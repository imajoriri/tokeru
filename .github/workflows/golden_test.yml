name: Create goldten test pull request

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/install_flutter_dependencies

      - name: Config git
        run: |
          git config user.name "GitHub Action"
          git config user.email "github-action@github.com"

      # 現在のブランチと作成するブランチの名前をセットする
      - name: Set branch name
        run: |
          echo "current_branch=${{ github.head_ref }}" >> $GITHUB_ENV
          echo "new_branch=${{ github.head_ref }}-update-golden" >> $GITHUB_ENV
          if git ls-remote --heads origin $new_branch | grep -q "refs/heads/$new_branch"; then
            echo "new_branch_exist=true" >> $GITHUB_ENV
          else
            echo "new_branch_exist=false" >> $GITHUB_ENV
          fi

      # ブランチの作成。
      # すでにリモートにブランチが存在する場合はそのブランチに切り替える。
      # ブランチが存在しない場合は新規作成する。
      - name: Create new branch
        run: |
          git fetch origin $new_branch
          if $new_branch_exist = "true"; then
            git branch $new_branch origin/$new_branch
            git checkout $new_branch
            git merge $current_branch
          else
            git checkout -b $new_branch
          fi

      # Goldenファイルの更新をし、変更があるかどうかを確認する
      - name: "Update golden file and check changes"
        run: |
          flutter test --update-goldens
          git status --porcelain
          if git status --porcelain | grep -q ".*\/goldens\/.*\.png"; then
            echo "has_file_changes=true" >> $GITHUB_ENV
          else
            echo "has_file_changes=false" >> $GITHUB_ENV
            echo "No changes"
          fi

      # ファイルチェンジがある場合のみコミットとプッシュを行う
      # - name: git add, commit and push
      #   if: env.has_file_changes == 'true'
      #   run: |
      #     git add .
      #     git commit -m "Update golden test"
      #     if $new_branch_exist = "true"; then
      #       git push
      #     else
      #       git push origin $new_branch
      #     fi

      # - name: Check pull request exists
      #   run: |
      #     if git ls-remote --heads origin $new_branch | grep -q "refs/heads/$new_branch"; then
      #       echo "pr_exists=false" >> $GITHUB_ENV
      #     else
      #       echo "pr_exists=true" >> $GITHUB_ENV
      #     fi

      # # PRが存在しない、かつファイルチェンジがある場合のみPRを作成する
      # - name: create Pull Request to flutter-repo
      #   if: env.pr_exists == 'false' && env.has_changes == 'false'
      #   run: |
      #     gh pr create \
      #       --title "update goldten test" \
      #       --repo imajoriri/tokeru \
      #       --body "update goldten test" \
      #       --base $current_branch \
      #       --head $create_branch_name \
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
