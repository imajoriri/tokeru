name: Build and Release macOS App

# TODO: workflow_dispatchに変更する
on:
  pull_request:
    types: [opened, synchronize]

env:
  BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
  P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
  APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
  APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
  APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
  APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
  APPLE_APP_ID: ${{ secrets.APPLE_APP_ID }}

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "setup java"
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"

      - name: "Read flutter version from fvm config"
        id: flutter_info
        run: |
          FLUTTER_VERSION=$(jq -r '.flutterSdkVersion' ./.fvm/fvm_config.json)
          echo "FLUTTER_VERSION=$FLUTTER_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: "Install codemagic-cli-tools"
        run: |
          pip3 install codemagic-cli-tools

      - name: "Install the Apple certificate"
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          openssl pkcs12 -in $CERTIFICATE_PATH -nodes -nocerts -password pass:$P12_PASSWORD | openssl rsa -out $RUNNER_TEMP/cert_key

      - name: "Install the Apple provisioning profile"
        run: |
          app-store-connect fetch-signing-files "$APP_BUNDLE_ID" \
            --platform MAC_OS \
            --type MAC_APP_STORE \
            --certificate-key=@file:$RUNNER_TEMP/cert_key
          app-store-connect fetch-signing-files "$APP_BUNDLE_ID" \
            --platform MAC_OS \
            --type MAC_APP_DEVELOPMENT \
            --certificate-key=@file:$RUNNER_TEMP/cert_key \
            --create
          app-store-connect list-certificates \
            --type MAC_INSTALLER_DISTRIBUTION \
            --certificate-key=@file:$RUNNER_TEMP/cert_key \
            --save

      - name: "keychain initialize"
        run: keychain initialize

      - name: "keychain add-certificates"
        run: keychain add-certificates

      - name: "xcode-project use-profiles"
        run: xcode-project use-profiles

      - name: Build macOS app
        run: |
          build_number=$(app-store-connect get-latest-build-number $APPLE_APP_ID) 
          new_build_number=$((build_number + 1))
          flutter build macos --dart-define-from-file=dart_defines/prod.json --build-number=$new_build_number

      - name: "Package macOS app"
        run: |
          APP_NAME=$(find $(pwd) -name "*.app")
          PACKAGE_NAME=$(basename "$APP_NAME" .app).pkg
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          xcrun productbuild --component "$APP_NAME" /Applications/ unsigned.pkg
          INSTALLER_CERT_NAME=$(keychain list-certificates \
                    | jq '[.[]
                      | select(.common_name
                      | contains("Mac Developer Installer"))
                      | .common_name][0]' \
                    | xargs)
          xcrun productsign --sign "$INSTALLER_CERT_NAME" unsigned.pkg "$PACKAGE_NAME"
          rm -f unsigned.pkg

      - name: "Upload TestFlight"
        run: |
          app-store-connect publish --path "$PACKAGE_NAME"
