name: Deploy iOS

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CERT_KEY: ${{ secrets.CERT_KEY }}
  APP_STORE_CONNECT_KEY_IDENTIFIER: ${{ secrets.APP_STORE_CONNECT_KEY_IDENTIFIER }}
  APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
  APP_STORE_CONNECT_PRIVATE_KEY: ${{ secrets.APP_STORE_CONNECT_PRIVATE_KEY }}
  APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
  APPLE_APP_ID: ${{ secrets.APPLE_APP_ID }}
  PLATFORM: IOS

jobs:
  deploy_macos_app:
    runs-on: macos-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/install_flutter_dependencies

      - name: "Install codemagic-cli-tools"
        run: |
          pip3 install codemagic-cli-tools --break-system-packages

      - name: "Install the Apple certificate"
        run: |
          echo -n "$CERT_KEY" >> $RUNNER_TEMP/cert_key

      - name: "Install the Apple provisioning profile"
        run: |
          app-store-connect fetch-signing-files "$APP_BUNDLE_ID" \
            --platform $PLATFORM \
            --type IOS_APP_STORE \
            --certificate-key=@file:$RUNNER_TEMP/cert_key \
            --create

      - name: "Install the Certificates"
        run: |
          app-store-connect certificates list \
            --type DISTRIBUTION \
            --certificate-key=@file:$RUNNER_TEMP/cert_key \
            --save

      - name: "keychain initialize"
        run: |
          keychain delete
          keychain initialize

      - name: "keychain add-certificates"
        run: |
          keychain add-certificates

      - name: "xcode-project use-profiles"
        working-directory: packages/mobile
        run: |
          /usr/bin/plutil -replace CFBundleIdentifier -string $APP_BUNDLE_ID ios/Runner/Info.plist
          find **/*.xcodeproj -type f | xargs sed -i "" -E 's/PRODUCT_BUNDLE_IDENTIFIER = ".+";//g'
          xcode-project use-profiles

      - name: Build iOS app
        working-directory: packages/mobile
        run: |
          build_number=$(app-store-connect get-latest-build-number $APPLE_APP_ID --platform=IOS)
          new_build_number=$((build_number + 1))
          echo "$new_build_number"
          flutter build ipa --release \
            --export-options-plist=/Users/runner/export_options.plist \
            --dart-define-from-file=dart_defines/prod.json \
            --build-number=$new_build_number

      - name: "Upload TestFlight"
        working-directory: packages/mobile
        run: |
          app-store-connect publish --path $(find $(pwd) -name "*.ipa")
